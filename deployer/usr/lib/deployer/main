#!/bin/bash



# Fail on a single failed command in a pipeline
set -eu -o pipefail


# all values in an array
export ARGS=("${@,,}")
export LIBRARY_BASE="$(dirname ${BASH_SOURCE[0]} | sed -e 's/bin/lib\/deployer/')"


library_path="";
library_name="${ARGS[0]:-}";
program_name="${ARGS[1]:-}";


clean_up () {
    unset DEPLOYER_BASE_DIR;
}


print_error_and_exit () {
  cat ${LIBRARY_BASE}/errors/${1}.txt;
  exit ${1};
}


print_help_and_exit () {
    cat ${LIBRARY_BASE}/${library_name}/help.txt 2> /dev/null \
      || cat ${LIBRARY_BASE}/help.txt;
    clean_up;
    exit 1;
}


set_library_path () {
    # if program_name equal to help
    [ -d ${LIBRARY_BASE}/${library_name} ] \
      && [ "$program_name" = "help" ] \
      && print_help_and_exit;

    # if program_name existe
    [  !   -d ${LIBRARY_BASE}/${library_name}/${program_name} ] \
      && [ -x ${LIBRARY_BASE}/${library_name}/${program_name} ] \
      && library_path="${LIBRARY_BASE}/${library_name}/${program_name}" \
      && return 0;
    
    # if main program existe
    [ -x ${LIBRARY_BASE}/${library_name}/main ] \
      && library_path="${LIBRARY_BASE}/${library_name}/main" \
      && return 0;

    print_help_and_exit;
}


[ -n "$library_name" ] \
  && set_library_path \
  || print_help_and_exit;

shift;

$library_path \
  || print_error_and_exit $? ;
clean_up;
